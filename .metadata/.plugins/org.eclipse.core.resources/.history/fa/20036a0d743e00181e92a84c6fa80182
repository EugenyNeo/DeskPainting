
package MyPack;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.image.BufferedImage;
import java.util.ArrayList;

import javax.swing.JPanel;

public class PDraw extends JPanel implements MouseListener, MouseMotionListener

{
	int x;
	int y;
	PData data = null;
	int width = 1;
	ArrayList<IShape> pp = new ArrayList<IShape>();
	
	BufferedImage bi = new BufferedImage(1010, 620, BufferedImage.SCALE_DEFAULT);

	public PDraw()
	{
		
		setBounds(220,10,1010, 620);

		addMouseListener(this);
		addMouseMotionListener(this);

		Graphics2D gg = (Graphics2D) bi.getGraphics();
		gg.setColor(Color.white);
		gg.fillRect(0, 0, 1010, 620);

		repaint();
	}

	@Override
	public void mousePressed(MouseEvent e) 
	{
		x = e.getX();
		y = e.getY();
	}

	@Override
	public void mouseDragged(MouseEvent e)
	{
		
			int x2 = e.getX();
			int y2 = e.getY();		
			if(PData.type == "Curve")
			{
				Draw(x2,y2);
				x=x2;
				y=y2;
			}
			repaint();
	}
	@Override
	public void paint(Graphics g)
	{
		super.paint(g);

		Graphics2D gg = (Graphics2D) g;
		gg.drawImage(bi,0,0,null);

		for(IShape  shape : pp)
		{
			shape.draw(gg);
		}
	}

	private void Draw(int x2,int y2)
	{
		IShape p;
		
		if(PData.type == "Line")
		{
			p = new PLine(x, y, x2, y2, PData.width, PData.color);
		}
		else if(PData.type == "Rectangle")
		{
			p = new PRect(x, y, x2, y2, PData.width, PData.color);
		}
		else if(PData.type == "RoundRect")
		{
			p = new PRoundRect(x, y, x2, y2, PData.width, PData.color);
		}
		else if (PData.type == "Ellipse")
		{
			p = new PEllipse(x, y, x2, y2, PData.width, PData.color);
		}
		else 
		{
			p = new PLine(x, y, x2, y2, PData.width, PData.color);
		}
		
		p.draw((Graphics2D) bi.getGraphics());
		pp.add(p);
	}

	@Override
	public void mouseClicked(MouseEvent arg0) {}
	@Override
	public void mouseEntered(MouseEvent arg0) {}
	@Override
	public void mouseExited(MouseEvent arg0) {}
	@Override
	public void mouseReleased(MouseEvent e)
	{
		if(PData.type!="Curve")
		{
			int x2 = e.getX();
			int y2 = e.getY();
			
			Draw(x2, y2);
			x = x2;
			y = y2;
		}
		repaint();
	}
	@Override
	public void mouseMoved(MouseEvent arg0) {}

}
